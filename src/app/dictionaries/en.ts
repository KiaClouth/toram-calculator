import { type dictionary } from "./type";

const dictionary: dictionary = {
  ui: {
    add: "Add",
    create: "Create",
    remove: "Remove",
    update: "Update",
    open: "Open",
    upload: "Upload",
    reset: "Reset",
    save: "Save",
    modify: "Modify",
    cancel: "Cancel",
    close: "close",
    columnsHidden: "Columns Hidden",
    filter: "Filter",
    searchPlaceholder: "Search something ~",
    root: {
      home: "Home",
      monsters: "Monsters",
      skills: "Skills",
      equipments: "Equipments",
      crystas: "Crystas",
      pets: "Pets",
      items: "Items",
      character: "Character",
      comboAnalyze: "Combo",
    },
    index: {
      goodMorning: "Good Morning ~",
      goodAfternoon: "Good Afternoon ~",
      goodEvening: "Good Evening ~",
    },
    monster: {
      pageTitle: "Monster Information Table",
      discription: "Emmm..............",
      augmented: "Show All Stars",
      canNotModify: "System Generated",
      monsterDegreeOfDifficulty: {
        0: "☆☆☆☆",
        1: "★☆☆☆",
        2: "★★☆☆",
        3: "★★★☆",
        4: "★★★★",
      },
      monsterForm: {
        discription: "When uploading fixed-point boss data, please use one-star data, and the system will automatically calculate the data for other star levels according to the rules.",
      }
    },
    skill: {
      pageTitle: "Skill Information Table",
      discription: "Emmm..............",
    },
    analyze: {
      pageTitle: "Analyzer",
      discription: "Emmm..............",
      modifiers: "Modifiers",
      characterData: {
        lv: "Lv",
        mainWeapon: {
          type: "Type",
          _baseAtk: "BaseAtk",
          refinement: "Refinement",
          stability: "Stability"
        },
        subWeapon: {
          type: "Type",
          _baseAtk: "BaseAtk",
          refinement: "Refinement",
          stability: "Stability"
        },
        bodyArmor: {
          type: "Type",
          _baseDef: "BaseDef",
          refinement: "Refinement"
        },
        _str: "Str",
        _int: "Int",
        _vit: "Vit",
        _agi: "Agi",
        _dex: "Dex",
        _luk: "Luk",
        _cri: "Cri",
        _tec: "Tec",
        _men: "Men",
        _pPie: "p-Pie",
        _mPie: "m-Pie",
        _pStab: "p-Stab",
        _nDis: "n-Dis",
        _fDis: "f-Dis",
        _crT: "Cr-T",
        _cdT: "Cd-T",
        _weaPatkT: "Wea-pAtk-T",
        _weaMatkT: "Wea-mAtk-T",
        _unsheatheAtk: "Unsheathe-Atk",
        _stro: "Stro",
        _total: "Total",
        _final: "Final",
        _am: "Am",
        _cm: "Cm",
        _aggro: "Aggro",
        _maxHP: "MaxHP",
        _maxMP: "MaxMp",
        _pCr: "p-Cr",
        _pCd: "p-Cd",
        _mainWeaponAtk: "MainWeaponAtk",
        _subWeaponAtk: "SubWeaponAtk",
        _weaponAtk: "WeaponAtk",
        _pAtk: "p-Atk",
        _mAtk: "m-Atk",
        _aspd: "Aspd",
        _cspd: "Cspd",
        _ampr: "Ampr",
        _hp: "Hp",
        _mp: "Mp"
      },
      monsterData: {
        name: "Name",
        lv: "Lv",
        _hp: "Hp",
        _pDef: "p-Def",
        _pRes: "p-Res",
        _mDef: "m-Def",
        _mRes: "m-Res",
        _cRes: "c-Res"
      },
      skillData: {
        index: "Index",
        passedFrames: "PassedFrames",
        name: "Name",
        lv: "Lv",
        _am: "Am",
        _cm: "Cm",
        actionFixedDurationFormula: "ActionFixedDurationFormula",
        actionModifiableDurationFormula: "ActionModifiableDurationFormula",
        chantingFixedDurationFormula: "ChantingFixedDurationFormula",
        chantingModifiableDurationFormula: "ChantingModifiableDurationFormula",
        _actionFixedDuration: "ActionFixedDuration",
        _actionModifiableDuration: "ActionModifiableDuration",
        _chantingFixedDuration: "ChantingFixedDuration",
        _chantingModifiableDuration: "ChantingModifiableDuration",
        skillActionFrames: "ActionFrames",
        skillChantingFrames: "ChantingFrames",
        skillDuration: "Duration",
        skillWindUp: "WindUp",
        stateFramesData: "StateFramesData",
        finalEventSequence: "",
      },
      actualValue: "Actual",
      baseValue: "Base",
      staticModifiers: "StaticModifiers",
      dynamicModifiers: "DynamicModifiers"
    }
  },
  db: {
    enums: {
      State: {
        PRIVATE: "Private",
        PUBLIC: "Public",
      },
      MonsterType: {
        COMMON_BOSS: "Common Boss",
        COMMON_MINI_BOSS: "Common mini Boss",
        COMMON_MOBS: "Common Mobs",
        EVENT_BOSS: "Event Boss",
        EVENT_MINI_BOSS: "Event mini Boss",
        EVENT_MOBS: "Event Mobs",
      },
      Element: {
        NO_ELEMENT: "No-Element",
        DARK: "Dark",
        EARTH: "Earth",
        FIRE: "Fire",
        LIGHT: "Light",
        WATER: "Water",
        WIND: "Wind",
      },
      SpecialAbiType: {
        NULL: "Null",
        LUK: "Luk",
        CRI: "Cri",
        TEC: "Tec",
        MEN: "Men"
      },
      MainWeaType: {
        NO_WEAPOEN: "no-weapon",
        ONE_HAND_SWORD: "one-hand-sword",
        TWO_HANDS_SWORD: "two-hands-sword",
        BOW: "bow",
        STAFF: "staff",
        MAGIC_DEVICE: "magic-device",
        KNUCKLE: "knuckle",
        HALBERD: "halberd",
        KATANA: "katana",
        BOWGUN: "bowgun",
      },
      SubWeaType: {
        NO_WEAPOEN: "no-weapon",
        ONE_HAND_SWORD: "one-hand-sword",
        MAGIC_DEVICE: "magic-device",
        KNUCKLE: "knuckle",
        KATANA: "katana",
        ARROW: "arrow",
        DAGGER: "dagger",
        NINJUTSUSCROLL: "ninjutsu-scroll",
        SHIELD: "shield",
      },
      BodyArmorType: {
        NORMAL: "Normal",
        LIGHT: "Light",
        HEAVY: "Heavy"
      },
      CrystalType: {
        GENERAL: "General",
        WEAPONCRYSTAL: "WeaponCrystal",
        BODYCRYSTAL: "BodyCrystal",
        ADDITIONALCRYSTAL: "AdditionalCrystal",
        SPECIALCRYSTAL: "SpecialCrystal",
      },
      SkillType: {
        ACTIVE_SKILL: "ActiveSkill",
        PASSIVE_SKILL: "PassiveSkill"
      },
      SkillTreeName: {
        BLADE: "Blade Skill",
        MAGIC: "Magic Skill",
        SHOT: "Shot Skill",
        MARTIAL: "Martial Skill",
        DUALSWORD: "DualSword Skill",
        HALBERD: "Halberd Skill",
        MONONOFU: "Mononofu Skill",
        CRUSHER: "Crusher Skill",
        SPRITE: "Sprite Skill"
      },
      UserRole: {
        USER: "User",
        ADMIN: "Admin",
      },
      WeaponElementDependencyType: {
        TRUE: "yes",
        FALSE: "no"
      },
      ComboType: {
        NULL: "Null",
      },
      YieldType: {
        ImmediateEffect: "ImmediateEffect",
        PersistentEffect: "PersistentEffect",
      },
      SkillExtraActionType: {
        None: "None",
        Chanting: "Chanting",
        Charging: "Charging",
      }
    },
    models: {
      monster: {
        id: "ID",
        updatedByUserId: "UpdatedByUser",
        state: "State",
        name: "Name",
        monsterType: "Type",
        baseLv: "Lv",
        experience: "Exp",
        address: "Address",
        element: "Element",
        radius: "Radius",
        maxhp: "MaxHP",
        physicalDefense: "P-Def",
        physicalResistance: "P-Res",
        magicalDefense: "M-Def",
        magicalResistance: "M-Res",
        criticalResistance: "C-Res",
        avoidance: "Avo",
        dodge: "Dod",
        block: "Blo",
        normalAttackResistanceModifier: "N-ATK-Res-Mod",
        physicalAttackResistanceModifier: "P-ATK-Res-Mod",
        magicalAttackResistanceModifier: "M-ATK-Res-Mod",
        difficultyOfTank: "DifficultyOfTank",
        difficultyOfMelee: "DifficultyOfMelee",
        difficultyOfRanged: "DifficultyOfRanged",
        possibilityOfRunningAround: "PossibilityOfRunningAround",
        specialBehavior: "SpecialBehavior",
        createdByUserId: "CreatedByUser",
        viewCount: "ViewCount",
        usageCount: "UsageCount",
        createdAt: "CreatedAt",
        updatedAt: "UpdatedAt",
        usageTimestamps: "UsageTimestamps",
        viewTimestamps: "ViewTimestamps",
        raters: "Raters",
        dataSources: ""
      },
      skill: {
        id: "ID",
        state: "State",
        name: "Name",
        createdByUserId: "CreateBy",
        updatedByUserId: "UpdatedBy",
        viewCount: "ViewCount",
        usageCount: "SsageCount",
        createdAt: "CreatedAt",
        updatedAt: "UpdatedAt",
        usageTimestamps: "UsageTimestamps",
        viewTimestamps: "ViewTimestamps",
        skillType: "SkillType",
        level: "Level",
        skillTreeName: "TreeName",
        weaponElementDependencyType: "WEDT",
        element: "Element",
        skillEffect: "SkillEffect",
        skillDescription: ""
      },
      user: {
        id: "ID",
        name: "Name",
        email: "Email",
        emailVerified: "EmailVerified",
        image: "Image",
        role: "Role"
      },
      skillEffect: {
        skillCost: "SkillCost",
        skillYield: "SkillYield",
        id: "ID",
        condition: "Condition",
        actionBaseDurationFormula: "ActionBaseDuration",
        actionModifiableDurationFormula: "ActionModifiableDuration",
        skillExtraActionType: "",
        chargingBaseDurationFormula: "",
        chargingModifiableDurationFormula: "",
        chantingBaseDurationFormula: "ChantingBaseDurationFormula",
        chantingModifiableDurationFormula: "ChantingModifiableDurationFormula",
        skillWindUpFormula: "SkillWindUpFormula",
        skillRecoveryFormula: "SkillRecoveryFormula",
        belongToskillId: "BelongToskillId",
        description: "Description",
      },
      skillCost: {
        id: "ID",
        name: "Name",
        costFormula: "CostFormula",
        skillEffectId: "SkillEffectId"
      },
      skillYield: {
        id: "ID",
        name: "Name",
        yieldType: "YieldType",
        mutationTimingFormula: "MutationTimingFormula",
        yieldFormula: "YieldFormula",
        skillEffectId: "SkillEffectId",
      }
    },
  },
};

export default dictionary;
